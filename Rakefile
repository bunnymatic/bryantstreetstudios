require 'sass'
require 'sass/plugin'

task :default => :run
desc 'run the server'
task :run => 'sass:build' do |t|
  require File.join(File.dirname(__FILE__),'app')
  BryantStreetStudios.run!
end

begin
  require 'rspec/core/rake_task'
  desc "run specs"
  RSpec::Core::RakeTask.new
rescue Exception => ex
  puts "Failed to include RSpec rake tasks - should be ok for production environments"
end

namespace :sass do

  task :sass_environment do
    Sass::Plugin.options[:style] = :compact
    Sass::Plugin.add_template_location("./scss")
    Sass::Plugin.remove_template_location("./public/stylesheets")
    Sass::Plugin.on_updated_stylesheet { |template, css| puts "Building #{css} from #{template}" }
    Sass::Plugin.on_not_updating_stylesheet { |template, css| puts "Skipping #{css}" }
  end

  desc "Forcefully updates the stylesheets generated by SASS."
  task :build => :sass_environment do
    Sass::Plugin.force_update_stylesheets
  end

  desc "Updates the out of date stylesheets generated by SASS."
  task :watch => :sass_environment do
    Sass::Plugin.update_stylesheets
  end
end

namespace :db do
  desc "Create dev database"
  task :create do
    cmd = [ "psql" ]
    cmd << "--user #{ENV.fetch('PG_USER', 'postgres')}"
    cmd << "--password #{ENV['PG_PASS']}" if ENV['PG_PASS']
    cmd << "-c 'create database bryant_dev'"
    puts `#{cmd.join " "}`
  end
  desc "Create test database"
  task :create_test do
    cmd = [ "psql" ]
    cmd << "--user #{ENV.fetch('PG_USER', 'postgres')}"
    cmd << "--password #{ENV['PG_PASS']}" if ENV['PG_PASS']
    cmd << "-c 'create database bryant_dev'"
    puts `#{cmd.join " "}`
  end
  task :auto_migrate do
    require 'dm-migrations'
    DataMapper.auto_migrate!
  end
end

begin
  require 'jasmine'
  load 'jasmine/tasks/jasmine.rake'
rescue LoadError
  task :jasmine do
    abort "Jasmine is not available. In order to run jasmine, you must: (sudo) gem install jasmine"
  end
end
